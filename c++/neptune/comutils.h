///////////////////////////////////////////////////////////////////////////////// COMUTILS.H : Win32 COM utility classes//#ifndef __COMUTILS_H__#define __COMUTILS_H__/////////////////////////////////////////////////////////////////////////////namespace ComUtil{const int buffsize = 256;}/////////////////////////////////////////////////////////////////////////////class ComClass{public:    // Construction / Destruction    ComClass() {}    ComClass(const ComClass &);    ~ComClass() {}    ComClass & operator = (const ComClass &);    tstring progid;    tstring clsid;    tstring name;};typedef map<tstring, ComClass *> ClassMap;/////////////////////////////////////////////////////////////////////////////class ComClasses : protected ClassMap{public:    // Construction / Destruction    ComClasses();    ~ComClasses();    // Interface    size_t size() const;    ComClass * lookup(LPCTSTR) const;protected:    void load();    void load(LPCTSTR key);    void clear();private:    static LPCTSTR rootKey;};/////////////////////////////////////////////////////////////////////////////inline size_t ComClasses::size() const{    return ClassMap::size();}typedef map<tstring, tstring> IIDMap;/////////////////////////////////////////////////////////////////////////////class ComInterfaces : protected IIDMap{public:    // Construction / Destruction    ComInterfaces();    ~ComInterfaces();    // Interface    size_t size() const;    tstring lookup(LPCTSTR) const;protected:    void load();    void load(LPCTSTR key);private:    static LPCTSTR rootKey;};/////////////////////////////////////////////////////////////////////////////inline size_t ComInterfaces::size() const{    return IIDMap::size();}#endif // __COMUTILS_H__