///////////////////////////////////////////////////////////////////////////////// REG.CPP : Win32 registry class//#include "common.h"#include "reg.h"RegKey::RegKey()	: hKey(0){}RegKey::~RegKey(){	close();}/////////////////////////////////////////////////////////////////////////////bool RegKey::open(HKEY hOpenKey, LPCTSTR name, REGSAM mask){	HKEY H;	LONG rtn = ::RegOpenKeyEx(hOpenKey, name, 0, mask, &H);	if (rtn != ERROR_SUCCESS)		return false;	close();	hKey = H;	return true;}/////////////////////////////////////////////////////////////////////////////void RegKey::close(){	if (0 != hKey) {		RegCloseKey(*this);		hKey = NULL;	}}/////////////////////////////////////////////////////////////////////////////bool RegKey::queryValue(LPCTSTR name, LPTSTR data, LPDWORD size){	if (!isOpen())		return false;	DWORD type = 0UL;	LONG rtn = RegQueryValueEx(*this,	                           name, 0, &type, (LPBYTE)data, size);	return rtn == ERROR_SUCCESS;}/////////////////////////////////////////////////////////////////////////////bool RegKey::queryValue(LPCTSTR name, DWORD & value){	if (!isOpen())		return false;	DWORD type = 0UL;	DWORD size = sizeof(DWORD);	LONG rtn = RegQueryValueEx(*this,	                           name, 0, &type, (LPBYTE)&value, &size);	return rtn == ERROR_SUCCESS;}