/////////////////////////////////////////////////////////////////////////////
//
//	PLAYER.CPP : Pente Player Abstraction
//
#include "stdafx.h"
#include "player.h"
#include "PenteBoard.h"

IMPLEMENT_DYNAMIC(Player, CObject)

/////////////////////////////////////////////////////////////////////////////
Player::Player()
		: captures(0)
{
}

/////////////////////////////////////////////////////////////////////////////
Player::Player(const Player & player)
{
	*this = player;
}

/////////////////////////////////////////////////////////////////////////////
Player & Player::operator = (const Player & player)
{
	if (this != &player) {
		captures = player.captures;
	}

	return *this;
}

/////////////////////////////////////////////////////////////////////////////
Player::~Player()
{
}

/////////////////////////////////////////////////////////////////////////////
void Player::Serialize(CArchive & ar)
{
	if (ar.IsStoring()) {
		ar << captures;
	} else {
		ar >> captures;
	}
}
