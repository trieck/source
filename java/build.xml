<project name="pixie" default="compile" basedir=".">

		<property file="build.properties"/>
		<property name="app.name" value="pixie"/>
		<property name="app.path" value="/${app.name}"/>
		<property name="build.home" value="${basedir}/build"/>
		<property name="catalina.home" value="${tomcat.home}"/>
		<property name="dist.home" value="${basedir}/dist"/>
		<property name="src.home" value="${basedir}/src"/>
		<property name="web.home" value="${basedir}/web"/>

		<path id="compile.classpath">
				<fileset dir="${catalina.home}/bin">
						<include name="*.jar"/>
				</fileset>
				<pathelement location="${catalina.home}/lib"/>
				<fileset dir="${catalina.home}/lib">
						<include name="*.jar"/>
				</fileset>
		</path>

		<taskdef resource="org/apache/catalina/ant/catalina.tasks"
						 classpathref="compile.classpath"/>

		<property name="compile.debug" value="true"/>
		<property name="compile.deprecation" value="false"/>
		<property name="compile.optimize" value="true"/>

		<target name="all" depends="clean,compile"
						description="Clean build and dist directories, then compile"/>

		<target name="clean"
						description="Delete old build and dist directories">
				<delete dir="${build.home}"/>
				<delete dir="${dist.home}"/>
		</target>

		<target name="compile" depends="prepare"
						description="Compile Java sources">

				<!-- Compile Java classes as necessary -->
				<mkdir dir="${build.home}/WEB-INF/classes"/>
				<javac srcdir="${src.home}"
							 destdir="${build.home}/WEB-INF/classes"
							 debug="${compile.debug}"
							 deprecation="${compile.deprecation}"
							 optimize="${compile.optimize}">
						<classpath refid="compile.classpath"/>
				</javac>

				<!-- Copy application resources -->
				<copy todir="${build.home}/WEB-INF/classes">
						<fileset dir="${src.home}" excludes="**/*.java"/>
						<fileset dir="${basedir}/config"/>            
				</copy>
		</target>

		<target name="dist" depends="compile" description="Create WAR file">

				<!-- Create application WAR file -->
				<jar jarfile="${dist.home}/${app.name}.war">
						<fileset dir="${build.home}"/>
				</jar>

		</target>

		<target name="dist-jar" depends="compile" description="Create JAR file">
				<!-- Create application JAR file -->
				<jar jarfile="${dist.home}/${app.name}.jar"
						 basedir="${build.home}/WEB-INF/classes"/>
		</target>
		
		<target name="deploy" depends="dist"
						description="deploy application to servlet container">

				<deploy url="${manager.url}"
								username="${manager.username}"
								password="${manager.password}"
								path="${app.path}"
								localWar="file://${dist.home}/${app.name}.war"/>

		</target>

		<target name="list"
						description="List installed applications on servlet container">

				<list url="${manager.url}"
							username="${manager.username}"
							password="${manager.password}"/>

		</target>

		<target name="prepare">

				<!-- Create build directories as needed -->
				<mkdir dir="${build.home}"/>
				<mkdir dir="${build.home}/WEB-INF"/>
				<mkdir dir="${build.home}/WEB-INF/classes"/>

				<copy todir="${build.home}">
						<fileset dir="${web.home}"/>
				</copy>
				
				<mkdir dir="${build.home}/WEB-INF/lib"/>
		</target>

		<target name="reload" depends="compile"
						description="Reload application on servlet container">

				<reload url="${manager.url}"
								username="${manager.username}"
								password="${manager.password}"
								path="${app.path}"/>

		</target>

		<target name="undeploy"
						description="Remove application on servlet container">

				<undeploy url="${manager.url}"
									username="${manager.username}"
									password="${manager.password}"
									path="${app.path}"/>

		</target>

		<target name="reinstall" depends="dist,undeploy,deploy"/>

</project>
